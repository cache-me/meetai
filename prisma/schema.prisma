// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ==========================================
// ENUMS
// ==========================================

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum OtpReason {
  FORGOT_PASSWORD
  LOGIN
  REGISTRATION
  MOBILE_VERIFICATION
}

enum Gender {
  MALE
  FEMALE
  OTHER
  PREFER_NOT_TO_SAY
}

// ==========================================
// NEXTAUTH REQUIRED MODELS
// ==========================================

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// ==========================================
// APPLICATION MODELS
// ==========================================

model User {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  name                   String?
  email                  String?   @unique
  password               String?
  emailVerified          DateTime?
  gender                 Gender?
  address                String?
  image                  String?
  role                   UserRole  @default(USER)
  mobileNumber           String    @unique
  isVerifiedMobileNumber Boolean   @default(false)
  isActive               Boolean   @default(true)
  lastLoginAt            DateTime?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  accounts Account[]
  sessions Session[]
  posts    Post[]

  @@map("users")
}

model Otp {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  otp            String
  mobileNumber   String
  reason         OtpReason
  expiresAt      DateTime
  resendAttempts Int       @default(0)
  isUsed         Boolean   @default(false)
  usedAt         DateTime?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([mobileNumber, reason])
  @@map("otps")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean  @default(false)
  slug      String?  @unique
  tags      String[]

  // Relations
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String @db.ObjectId

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

// ==========================================
// ADDITIONAL USEFUL MODELS
// ==========================================

model AuditLog {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  userId     String? @db.ObjectId
  action     String // e.g., "LOGIN", "LOGOUT", "CREATE_POST", etc.
  resource   String? // e.g., "USER", "POST", etc.
  resourceId String? @db.ObjectId
  details    Json? // Additional details about the action
  ipAddress  String?
  userAgent  String?

  createdAt DateTime @default(now())

  @@map("audit_logs")
}

model SystemSettings {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("system_settings")
}
